{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omesh\\\\OneDrive\\\\Documents\\\\GitHub\\\\WBD_eventweb\\\\frontend\\\\src\\\\components\\\\Indexpage\\\\Indexourcrew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../../styles/Indexourcrew.css'; // Include your CSS for the styles\nimport emp1 from '../../assests/emp1.jpg';\nimport emp2 from '../../assests/emp2.jpg';\nimport emp3 from '../../assests/emp3.jpg';\nimport emp4 from '../../assests/emp4.jpg';\nimport emp5 from '../../assests/emp5.jpg';\nimport emp6 from '../../assests/emp6.jpg';\nimport emp7 from '../../assests/emp7.jpg';\nimport emp8 from '../../assests/emp8.jpg';\nimport emp9 from '../../assests/emp9.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrewSection = () => {\n  _s();\n  const employeesRef = useRef([]); // Create a ref to hold references to each employee\n  const [stepIndex, setStepIndex] = useState(0); // Manage the current step\n  const stepCount = 9; // Total number of employees\n  const stepsPerView = 3; // Number of employees to show at a time\n  const transitionTime = 1000; // Time in milliseconds for each employee to start fading in\n  const displayDuration = 5000; // Time in milliseconds to display each set of employees\n\n  // UseEffect to handle the animation and interval logic\n  useEffect(() => {\n    // Function to hide all employees\n    const hideAllEmployees = () => {\n      employeesRef.current.forEach(employee => {\n        if (employee) {\n          employee.classList.remove('fade-in');\n          employee.style.opacity = 0;\n          employee.style.visibility = 'hidden';\n        }\n      });\n    };\n\n    // Function to show the current set of employees with staggered timing\n    const showSteps = () => {\n      hideAllEmployees();\n\n      // Show the current set of employees with staggered delays\n      for (let i = 0; i < stepsPerView; i++) {\n        const index = (stepIndex + i) % stepCount;\n        const staggeredDelay = i * transitionTime; // Stagger the timing\n\n        setTimeout(() => {\n          if (employeesRef.current[index]) {\n            employeesRef.current[index].classList.add('fade-in');\n            employeesRef.current[index].style.opacity = 1;\n            employeesRef.current[index].style.visibility = 'visible';\n          }\n        }, staggeredDelay);\n      }\n    };\n\n    // Initial load to show steps\n    showSteps();\n\n    // Set interval to repeat the animation logic\n    const interval = setInterval(() => {\n      setStepIndex(prevIndex => (prevIndex + stepsPerView) % stepCount);\n    }, displayDuration + transitionTime * stepsPerView);\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(interval);\n  }, [stepIndex, stepCount, stepsPerView, transitionTime, displayDuration]);\n\n  // Define the employees data array (all 9 employees)\n  const employeesData = [{\n    name: 'Alex',\n    title: 'Event Manager',\n    description: 'As the Event Coordinator, Alex ensures that all details are aligned with your vision and goals.',\n    imgUrl: emp1\n  }, {\n    name: 'Jasmine',\n    title: 'Event Planner',\n    description: 'Jasmine is our Creative Planner, responsible for tailoring activities and logistics to fit your event needs.',\n    imgUrl: emp2\n  }, {\n    name: 'Michael',\n    title: 'Venue Manager',\n    description: 'Michael, our Operations Specialist, ensures smooth execution and handles all on-site management tasks.',\n    imgUrl: emp3\n  }, {\n    name: 'Emily',\n    title: 'Event Photographer',\n    description: 'Emily captures every moment to ensure the memories of your event last forever.',\n    imgUrl: emp4\n  }, {\n    name: 'David',\n    title: 'Room Setup Crew Lead',\n    description: 'David ensures that every detail in the room is perfect and set up just the way you need it.',\n    imgUrl: emp5\n  }, {\n    name: 'Olivia',\n    title: 'On-Site Tech Supporter',\n    description: 'Olivia provides all the technical support needed to ensure everything runs smoothly.',\n    imgUrl: emp6\n  }, {\n    name: 'James',\n    title: 'Check-In Kiosk Operator',\n    description: 'James helps guests check in smoothly and makes sure they are ready for the event.',\n    imgUrl: emp7\n  }, {\n    name: 'Alice',\n    title: 'Transportation Assistant',\n    description: 'Alice coordinates transportation to ensure your guests arrive on time and comfortably.',\n    imgUrl: emp8\n  }, {\n    name: 'Linda',\n    title: 'Gift Bag Assembler',\n    description: 'Linda ensures every guest receives a personalized gift bag to take home memorable items.',\n    imgUrl: emp9\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"big-container-crew\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [\"Our Crew\", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subcrew\",\n        children: \"Our dedicated employees bring diverse skills and a passion for excellence, driving our company\\u2019s success and fostering a collaborative and innovative work environment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees\",\n      id: \"employees\",\n      children: employeesData.map((employee, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee\",\n        ref: el => employeesRef.current[index] = el // Attach ref for each employee\n        ,\n        style: {\n          top: `${Math.floor(index / 3) * 50}%`,\n          left: `${index % 3 * 33}%`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: employee.imgUrl,\n          alt: `${employee.title} Icon`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: employee.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: employee.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-name\",\n          children: employee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(CrewSection, \"RTOIcQoubFFVDlIomv7srriv9Oo=\");\n_c = CrewSection;\nexport default CrewSection;\nvar _c;\n$RefreshReg$(_c, \"CrewSection\");","map":{"version":3,"names":["React","useEffect","useRef","useState","emp1","emp2","emp3","emp4","emp5","emp6","emp7","emp8","emp9","jsxDEV","_jsxDEV","CrewSection","_s","employeesRef","stepIndex","setStepIndex","stepCount","stepsPerView","transitionTime","displayDuration","hideAllEmployees","current","forEach","employee","classList","remove","style","opacity","visibility","showSteps","i","index","staggeredDelay","setTimeout","add","interval","setInterval","prevIndex","clearInterval","employeesData","name","title","description","imgUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","ref","el","top","Math","floor","left","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Omesh/OneDrive/Documents/GitHub/WBD_eventweb/frontend/src/components/Indexpage/Indexourcrew.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport '../../styles/Indexourcrew.css'; // Include your CSS for the styles\r\nimport emp1 from '../../assests/emp1.jpg';\r\nimport emp2 from '../../assests/emp2.jpg';\r\nimport emp3 from '../../assests/emp3.jpg';\r\nimport emp4 from '../../assests/emp4.jpg';\r\nimport emp5 from '../../assests/emp5.jpg';\r\nimport emp6 from '../../assests/emp6.jpg';\r\nimport emp7 from '../../assests/emp7.jpg';\r\nimport emp8 from '../../assests/emp8.jpg';\r\nimport emp9 from '../../assests/emp9.jpg';\r\n\r\nconst CrewSection = () => {\r\n  const employeesRef = useRef([]); // Create a ref to hold references to each employee\r\n  const [stepIndex, setStepIndex] = useState(0); // Manage the current step\r\n  const stepCount = 9; // Total number of employees\r\n  const stepsPerView = 3; // Number of employees to show at a time\r\n  const transitionTime = 1000; // Time in milliseconds for each employee to start fading in\r\n  const displayDuration = 5000; // Time in milliseconds to display each set of employees\r\n\r\n  // UseEffect to handle the animation and interval logic\r\n  useEffect(() => {\r\n    // Function to hide all employees\r\n    const hideAllEmployees = () => {\r\n      employeesRef.current.forEach((employee) => {\r\n        if (employee) {\r\n          employee.classList.remove('fade-in');\r\n          employee.style.opacity = 0;\r\n          employee.style.visibility = 'hidden';\r\n        }\r\n      });\r\n    };\r\n\r\n    // Function to show the current set of employees with staggered timing\r\n    const showSteps = () => {\r\n      hideAllEmployees();\r\n\r\n      // Show the current set of employees with staggered delays\r\n      for (let i = 0; i < stepsPerView; i++) {\r\n        const index = (stepIndex + i) % stepCount;\r\n        const staggeredDelay = i * transitionTime; // Stagger the timing\r\n\r\n        setTimeout(() => {\r\n          if (employeesRef.current[index]) {\r\n            employeesRef.current[index].classList.add('fade-in');\r\n            employeesRef.current[index].style.opacity = 1;\r\n            employeesRef.current[index].style.visibility = 'visible';\r\n          }\r\n        }, staggeredDelay);\r\n      }\r\n    };\r\n\r\n    // Initial load to show steps\r\n    showSteps();\r\n\r\n    // Set interval to repeat the animation logic\r\n    const interval = setInterval(() => {\r\n      setStepIndex((prevIndex) => (prevIndex + stepsPerView) % stepCount);\r\n    }, displayDuration + transitionTime * stepsPerView);\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => clearInterval(interval);\r\n  }, [stepIndex, stepCount, stepsPerView, transitionTime, displayDuration]);\r\n\r\n  // Define the employees data array (all 9 employees)\r\n  const employeesData = [\r\n    {\r\n      name: 'Alex',\r\n      title: 'Event Manager',\r\n      description: 'As the Event Coordinator, Alex ensures that all details are aligned with your vision and goals.',\r\n      imgUrl: emp1,\r\n    },\r\n    {\r\n      name: 'Jasmine',\r\n      title: 'Event Planner',\r\n      description: 'Jasmine is our Creative Planner, responsible for tailoring activities and logistics to fit your event needs.',\r\n      imgUrl: emp2,\r\n    },\r\n    {\r\n      name: 'Michael',\r\n      title: 'Venue Manager',\r\n      description: 'Michael, our Operations Specialist, ensures smooth execution and handles all on-site management tasks.',\r\n      imgUrl: emp3,\r\n    },\r\n    {\r\n      name: 'Emily',\r\n      title: 'Event Photographer',\r\n      description: 'Emily captures every moment to ensure the memories of your event last forever.',\r\n      imgUrl: emp4,\r\n    },\r\n    {\r\n      name: 'David',\r\n      title: 'Room Setup Crew Lead',\r\n      description: 'David ensures that every detail in the room is perfect and set up just the way you need it.',\r\n      imgUrl: emp5,\r\n    },\r\n    {\r\n      name: 'Olivia',\r\n      title: 'On-Site Tech Supporter',\r\n      description: 'Olivia provides all the technical support needed to ensure everything runs smoothly.',\r\n      imgUrl: emp6,\r\n    },\r\n    {\r\n      name: 'James',\r\n      title: 'Check-In Kiosk Operator',\r\n      description: 'James helps guests check in smoothly and makes sure they are ready for the event.',\r\n      imgUrl: emp7,\r\n    },\r\n    {\r\n      name: 'Alice',\r\n      title: 'Transportation Assistant',\r\n      description: 'Alice coordinates transportation to ensure your guests arrive on time and comfortably.',\r\n      imgUrl: emp8,\r\n    },\r\n    {\r\n      name: 'Linda',\r\n      title: 'Gift Bag Assembler',\r\n      description: 'Linda ensures every guest receives a personalized gift bag to take home memorable items.',\r\n      imgUrl: emp9,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"big-container-crew\">\r\n      <div className=\"title\">\r\n        Our Crew\r\n        <p className=\"subcrew\">\r\n          Our dedicated employees bring diverse skills and a passion for excellence, driving our company’s success and fostering a collaborative and innovative work environment.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"employees\" id=\"employees\">\r\n        {/* Render each employee and attach ref */}\r\n        {employeesData.map((employee, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"employee\"\r\n            ref={(el) => (employeesRef.current[index] = el)} // Attach ref for each employee\r\n            style={{\r\n              top: `${Math.floor(index / 3) * 50}%`,\r\n              left: `${(index % 3) * 33}%`,\r\n            }}\r\n          >\r\n            <img\r\n              src={employee.imgUrl}\r\n              alt={`${employee.title} Icon`}\r\n            />\r\n            <h3>{employee.title}</h3>\r\n            <p>{employee.description}</p>\r\n            <div className=\"employee-name\">{employee.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrewSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}