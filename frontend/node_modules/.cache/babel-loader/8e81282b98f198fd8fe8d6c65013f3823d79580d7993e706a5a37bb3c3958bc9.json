{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omesh\\\\OneDrive\\\\Documents\\\\GitHub\\\\WBD_eventweb\\\\frontend\\\\src\\\\components\\\\AdminDashboard\\\\Statistics.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Pie } from 'react-chartjs-2'; // Import Pie\nimport axios from 'axios';\nimport '../../styles/Statistics.css'; // Ensure this path is correct\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement // Required for Pie Chart\n} from 'chart.js';\n\n// Register the components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement); // Register ArcElement for Pie\n\nconst Statistics = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [pieChartData, setPieChartData] = useState(null); // State for Pie chart\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Start loading\n      try {\n        console.log('Fetching data...'); // Debug log\n        const response = await axios.get('http://localhost:5000/trailAdmin'); // Adjust to your API endpoint\n        console.log('Response data:', response.data); // Log the response data\n\n        const incomeData = response.data;\n\n        // Check if incomeData is not empty\n        if (!incomeData || Object.keys(incomeData).length === 0) {\n          setError('No data available.');\n          setLoading(false);\n          return; // Exit early if no data\n        }\n\n        // Prepare data for the chart\n        const labels = Object.keys(incomeData);\n        const incomeValues = labels.map(label => incomeData[label].totalIncome);\n\n        // Generate random colors for each bar\n        const colors = labels.map(() => `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.6)`);\n        const borderColors = colors.map(color => color.replace(/0.6/, '1')); // Darker borders\n\n        setChartData({\n          labels: labels,\n          datasets: [{\n            label: 'Current total Income by Event Type',\n            data: incomeValues,\n            backgroundColor: colors,\n            borderColor: borderColors,\n            borderWidth: 1\n          }]\n        });\n\n        // Prepare data for the Pie chart\n        setPieChartData({\n          labels: labels,\n          datasets: [{\n            label: ' Current total Income by Event Type (Pie Chart)',\n            data: incomeValues,\n            backgroundColor: colors,\n            // Use the same colors for consistency\n            borderColor: borderColors,\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching chart data:', error);\n        setError('Failed to fetch data. Please try again later.');\n      } finally {\n        console.log('Loading finished'); // Debug log\n        setLoading(false); // End loading\n      }\n    };\n    fetchData();\n  }, []); // Ensure empty dependency array\n\n  // Function to generate a random color\n  const randomColor = () => {\n    return Math.floor(Math.random() * 256); // Random number between 0-255\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Total Income of Ongoing Events by Event Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message error`,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bar Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Event Type'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Total Income (₹)'\n              },\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return `${tooltipItem.dataset.label}: ₹${tooltipItem.raw.toLocaleString()}`;\n                }\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), pieChartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pie Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: pieChartData,\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return `${tooltipItem.label}: ₹${tooltipItem.raw.toLocaleString()}`;\n                }\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Statistics, \"cxcWQHFWGXNaUGVvoC/qNyIn43w=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Pie","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","Statistics","_s","chartData","setChartData","pieChartData","setPieChartData","loading","setLoading","error","setError","fetchData","console","log","response","get","data","incomeData","Object","keys","length","labels","incomeValues","map","label","totalIncome","colors","randomColor","borderColors","color","replace","datasets","backgroundColor","borderColor","borderWidth","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","maintainAspectRatio","responsive","scales","x","title","display","text","y","beginAtZero","plugins","legend","position","tooltip","callbacks","tooltipItem","dataset","raw","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Omesh/OneDrive/Documents/GitHub/WBD_eventweb/frontend/src/components/AdminDashboard/Statistics.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar, Pie } from 'react-chartjs-2'; // Import Pie\r\nimport axios from 'axios';\r\nimport '../../styles/Statistics.css'; // Ensure this path is correct\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement, // Required for Pie Chart\r\n} from 'chart.js';\r\n\r\n// Register the components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement); // Register ArcElement for Pie\r\n\r\nconst Statistics = () => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [pieChartData, setPieChartData] = useState(null); // State for Pie chart\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true); // Start loading\r\n            try {\r\n                console.log('Fetching data...'); // Debug log\r\n                const response = await axios.get('http://localhost:5000/trailAdmin'); // Adjust to your API endpoint\r\n                console.log('Response data:', response.data); // Log the response data\r\n                \r\n                const incomeData = response.data;\r\n                \r\n                // Check if incomeData is not empty\r\n                if (!incomeData || Object.keys(incomeData).length === 0) {\r\n                    setError('No data available.');\r\n                    setLoading(false);\r\n                    return; // Exit early if no data\r\n                }\r\n\r\n                // Prepare data for the chart\r\n                const labels = Object.keys(incomeData);\r\n                const incomeValues = labels.map(label => incomeData[label].totalIncome);\r\n                \r\n                // Generate random colors for each bar\r\n                const colors = labels.map(() => `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.6)`);\r\n                const borderColors = colors.map(color => color.replace(/0.6/, '1')); // Darker borders\r\n\r\n                setChartData({\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Current total Income by Event Type',\r\n                            data: incomeValues,\r\n                            backgroundColor: colors,\r\n                            borderColor: borderColors,\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n\r\n                // Prepare data for the Pie chart\r\n                setPieChartData({\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: ' Current total Income by Event Type (Pie Chart)',\r\n                            data: incomeValues,\r\n                            backgroundColor: colors, // Use the same colors for consistency\r\n                            borderColor: borderColors,\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching chart data:', error);\r\n                setError('Failed to fetch data. Please try again later.');\r\n            } finally {\r\n                console.log('Loading finished'); // Debug log\r\n                setLoading(false); // End loading\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Ensure empty dependency array\r\n\r\n    // Function to generate a random color\r\n    const randomColor = () => {\r\n        return Math.floor(Math.random() * 256); // Random number between 0-255\r\n    };\r\n\r\n    return (\r\n        <div className=\"container1\">\r\n            <h2>Current Total Income of Ongoing Events by Event Type</h2>\r\n            {loading && <div className=\"message\">Loading...</div>}\r\n            {error && <div className={`message error`}>{error}</div>}\r\n            {chartData && (\r\n                <div className=\"chartContainer1\">\r\n                    <h3>Bar Chart</h3>\r\n                    <Bar \r\n                        data={chartData} \r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            responsive: true,\r\n                            scales: {\r\n                                x: {\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Event Type',\r\n                                    },\r\n                                },\r\n                                y: {\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'Total Income (₹)',\r\n                                    },\r\n                                    beginAtZero: true,\r\n                                },\r\n                            },\r\n                            plugins: {\r\n                                legend: {\r\n                                    position: 'top',\r\n                                },\r\n                                tooltip: {\r\n                                    callbacks: {\r\n                                        label: function (tooltipItem) {\r\n                                            return `${tooltipItem.dataset.label}: ₹${tooltipItem.raw.toLocaleString()}`;\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                        }} \r\n                    />\r\n                </div>\r\n            )}\r\n            {pieChartData && (\r\n                <div className=\"chartContainer1\">\r\n                    <h3>Pie Chart</h3>\r\n                    <Pie\r\n                        data={pieChartData}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            responsive: true,\r\n                            plugins: {\r\n                                legend: {\r\n                                    position: 'top',\r\n                                },\r\n                                tooltip: {\r\n                                    callbacks: {\r\n                                        label: function (tooltipItem) {\r\n                                            return `${tooltipItem.label}: ₹${tooltipItem.raw.toLocaleString()}`;\r\n                                        },\r\n                                    },\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}