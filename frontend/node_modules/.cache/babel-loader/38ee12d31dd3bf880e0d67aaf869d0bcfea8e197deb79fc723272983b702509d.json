{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omesh\\\\OneDrive\\\\Documents\\\\GitHub\\\\WBD_eventweb\\\\frontend\\\\src\\\\components\\\\Feedback.jsx\",\n  _s = $RefreshSig$();\n// FeedbackForm.js\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setEmail, setRating } from \"../redux/actions\"; // Import the actions\nimport \"../styles/Feedback.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackForm = () => {\n  _s();\n  // Get the email and rating values from Redux store\n  const {\n    email,\n    rating\n  } = useSelector(state => state);\n\n  // Dispatch actions to update Redux store\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(`Email: ${email}, Rating: ${rating}`);\n\n    // Reset rating and email after submission\n    dispatch(setRating(0));\n    dispatch(setEmail(\"\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Feedback Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Employee Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => dispatch(setEmail(e.target.value)),\n          placeholder: \"Enter employee email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating\",\n        children: [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `star ${rating >= star ? \"active\" : \"\"}`,\n          onClick: () => dispatch(setRating(star)),\n          children: \"\\u2605\"\n        }, star, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackForm, \"FYrGXAe5onOfbsyzkMTy7ovc33Q=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","setEmail","setRating","jsxDEV","_jsxDEV","FeedbackForm","_s","email","rating","state","dispatch","handleSubmit","e","preventDefault","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","map","star","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Omesh/OneDrive/Documents/GitHub/WBD_eventweb/frontend/src/components/Feedback.jsx"],"sourcesContent":["// FeedbackForm.js\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEmail, setRating } from \"../redux/actions\"; // Import the actions\r\nimport \"../styles/Feedback.css\";\r\n\r\nconst FeedbackForm = () => {\r\n  // Get the email and rating values from Redux store\r\n  const { email, rating } = useSelector((state) => state);\r\n\r\n  // Dispatch actions to update Redux store\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(`Email: ${email}, Rating: ${rating}`);\r\n\r\n    // Reset rating and email after submission\r\n    dispatch(setRating(0));\r\n    dispatch(setEmail(\"\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedback-container\">\r\n      <h2>Feedback Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Email Field */}\r\n        <div className=\"email-field\">\r\n          <label htmlFor=\"email\">Employee Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => dispatch(setEmail(e.target.value))}\r\n            placeholder=\"Enter employee email\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Star Rating */}\r\n        <div className=\"rating\">\r\n          {[1, 2, 3, 4, 5].map((star) => (\r\n            <span\r\n              key={star}\r\n              className={`star ${rating >= star ? \"active\" : \"\"}`}\r\n              onClick={() => dispatch(setRating(star))}\r\n            >\r\n              &#9733;\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}